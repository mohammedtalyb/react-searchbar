{"version":3,"sources":["components/Cockpit/Cockpit.css","containers/App.css","components/Results/Result/Result.css","components/Results/Result/Result.js","components/Results/Results.js","components/Cockpit/Cockpit.js","containers/App.js","serviceWorker.js","data/states.js","index.js"],"names":["module","exports","Cockpit","focus","blur","left","hideIcon","App","selectedDropdown","arrowUp","arrowDown","SearchedResult","active","result","props","assignedClasses","classes","selectedItem","searchOnKey","itemValue","react_default","a","createElement","className","onClick","selectedItemFunc","results","map","state","Result_Result","key","inputClass","ulClass","inputRef","useRef","useEffect","current","alignIcon","toLowerCase","showIcon","onChange","search","placeholder","ref","Results","dataList","_this","data","filteredKeyResults","isSearchbar","filterdata","Object","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","setState","showSearchbarHandler","selectedItemHandler","item","searchHandler","event","inputValue","target","toUpperCase","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","includes","this","components_Cockpit_Cockpit","Component","defaultProps","Boolean","window","location","hostname","match","states","name","place","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ba3122c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cockpit\":\"Cockpit__Cockpit__iuz7I\",\"focus\":\"Cockpit__focus__2dXJu\",\"blur\":\"Cockpit__blur__1S-vO\",\"left\":\"Cockpit__left__2SVHf\",\"hideIcon\":\"Cockpit__hideIcon__2OCZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\",\"selectedDropdown\":\"App__selectedDropdown__Er4mH\",\"arrowUp\":\"App__arrowUp__R1knC\",\"arrowDown\":\"App__arrowDown__XDPZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchedResult\":\"Result__SearchedResult__1khly\",\"active\":\"Result__active__1_CNB\"};","import React from 'react';\nimport classes from './Result.css';\nconst result = (props) =>{\n    let assignedClasses = classes.SearchedResult;\n    if(props.selectedItem[props.searchOnKey] === props.itemValue) assignedClasses += \"   \" +classes.active;\n    return (<li \n        className={assignedClasses} \n        onClick={props.selectedItemFunc}\n        >{props.itemValue}</li>);\n} \n\nexport default result;","import React from 'react';\nimport Result from './Result/Result';\n\nconst results = (props) => props.result.map(state => {\n        return <Result \n        itemValue={state[props.searchOnKey]} \n        key={state.key} \n        selectedItemFunc={() => props.selectedItemFunc(state)}\n        selectedItem={props.selectedItem}\n        searchOnKey={props.searchOnKey} />\n})\n\nexport default results;","import React, { useEffect, useRef } from 'react';\nimport Results from '../Results/Results';\nimport classes from './Cockpit.css'\n\n// cockpit.defaultProps = {\n//     border: '1px solid #ddd' \n// }\nconst Cockpit = (props) => {\n    let inputClass = \"\";\n    let ulClass = \"\";\n    const inputRef = useRef();\n\n    useEffect(() => {\n        inputRef.current.focus();\n    },[]);\n\n    if (props.alignIcon.toLowerCase() === \"left\") {\n        inputClass += \" \" + classes.left;\n        ulClass += classes.left;\n    }\n\n    if (props.showIcon.toLowerCase() === 'false') {\n        inputClass += \" \" + classes.hideIcon;\n        ulClass += classes.hideIcon;\n    }\n\n    // var assignedClass = '';\n\n\n    // const blurHandler = () => {\n    //     assignedClass = \"\";\n    //     assignedClass = classes.blur;\n    // }\n \n\n\n    // let style = {\n    //     border: '1px solid #ddd'\n    // }\n\n    return (\n        <div className={classes.Cockpit}>\n            <div>\n                <span>\n                  <input\n                      onChange={props.search}\n                      className={inputClass}\n                      placeholder={props.placeholder}\n                      ref={inputRef}\n                  />\n                </span>\n                <ul className={ulClass}>\n                    <Results \n                    result={props.result} \n                    searchOnKey={props.searchOnKey}\n                    selectedItemFunc={props.selectedItemFunc}\n                    selectedItem={props.selectedItem} />\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Cockpit;","import React, { Component } from 'react';\nimport classes from './App.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nclass App extends Component {\n\n  static defaultProps = {\n    alignIcon: 'right',\n    placeholder: 'Search...',\n    showIcon: 'true'\n  }\n\n  state = {\n    dataList: this.props.data,\n    filteredKeyResults: [],\n    result: [],\n    selectedItem: {},\n    alignIcon: this.props.alignIcon,\n    searchOnKey: this.props.searchOnKey,\n    placeholder: this.props.placeholder,\n    showIcon: this.props.showIcon,\n    isSearchbar: false\n  }\n\n  filterdata = () => {\n    const filteredKeyResults = [];\n    const searchOnKey = this.state.searchOnKey;\n    const dataList = [...this.state.dataList];\n\n    for (let data of dataList) {\n      if (data[searchOnKey]) filteredKeyResults.push(data);\n    }\n\n    this.setState({\n      filteredKeyResults: filteredKeyResults,\n      selectedItem: filteredKeyResults[0]\n    })\n  }\n\n  showSearchbarHandler = () => {\n    this.setState({\n      isSearchbar: !this.state.isSearchbar,\n      result: this.state.filteredKeyResults\n    });\n  }\n\n  selectedItemHandler = item => {\n    this.setState({\n      result: this.state.filteredKeyResults,\n      selectedItem: item,\n      isSearchbar: false\n    });\n  }\n  \n  searchHandler = event => {\n    const searchOnKey = this.state.searchOnKey;\n    const inputValue = event.target.value.toUpperCase();\n    const filteredKeyResults = [...this.state.filteredKeyResults];\n    var result = [];\n\n    for (let data of filteredKeyResults) {\n      if (data[searchOnKey].toUpperCase().includes(inputValue)) result.push(data);\n    }\n\n    // if(!inputValue) result = [];\n    this.setState({\n      result: result\n    });\n  }\n\n  componentDidMount() {\n    this.filterdata();\n  }\n\n  render() {\n    let itemValue = '';\n\n    if (this.state.selectedItem) {\n      itemValue = <div className={classes.selectedDropdown} >\n                    <p onClick={this.showSearchbarHandler}>{this.state.selectedItem[this.state.searchOnKey]}\n                      <span className={this.state.isSearchbar ? classes.arrowUp : classes.arrowDown }></span>\n                   </p>\n                  </div>;\n    }\n\n    return (\n      <div className={classes.App}>\n        {itemValue}\n        {this.state.isSearchbar ? <Cockpit\n          placeholder={this.state.placeholder}\n          result={this.state.result}\n          search={this.searchHandler}\n          alignIcon={this.state.alignIcon}\n          showIcon={this.state.showIcon}\n          searchOnKey={this.state.searchOnKey}\n          selectedItemFunc={this.selectedItemHandler}\n          selectedItem={this.state.selectedItem} /> : null}\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var states = [\n    {\n    \"key\": \"AN\",\n    \"name\": \"Andaman and Nicobar Islands\"\n    },\n    {\n    \"key\": \"AP\",\n    \"name\": \"Andhra Pradesh\"\n    },\n    {\n    \"key\": \"AR\",\n    \"name\": \"Arunachal Pradesh\",\n    \"place\": \"mira road\"\n    },\n    {\n    \"key\": \"AS\",\n    \"name\": \"Assam\"\n    },\n    {\n    \"key\": \"BR\",\n    \"name\": \"Bihar\"\n    },\n    {\n    \"key\": \"CG\",\n    \"name\": \"Chandigarh\"\n    },\n    {\n    \"key\": \"CH\",\n    \"name\": \"Chhattisgarh\"\n    },\n    {\n    \"key\": \"DH\",\n    \"name\": \"Dadra and Nagar Haveli\"\n    },\n    {\n    \"key\": \"DD\",\n    \"name\": \"Daman and Diu\"\n    },\n    {\n    \"key\": \"DL\",\n    \"name\": \"Delhi\"\n    },\n    {\n    \"key\": \"GA\",\n    \"name\": \"Goa\"\n    },\n    {\n    \"key\": \"GJ\",\n    \"name\": \"Gujarat\"\n    },\n    {\n    \"key\": \"HR\",\n    \"name\": \"Haryana\"\n    },\n    {\n    \"key\": \"HP\",\n    \"name\": \"Himachal Pradesh\"\n    },\n    {\n    \"key\": \"JK\",\n    \"name\": \"Jammu and Kashmir\"\n    },\n    {\n    \"key\": \"JH\",\n    \"name\": \"Jharkhand\"\n    },\n    {\n    \"key\": \"KA\",\n    \"name\": \"Karnataka\"\n    },\n    {\n    \"key\": \"KL\",\n    \"name\": \"Kerala\"\n    },\n    {\n    \"key\": \"LD\",\n    \"name\": \"Lakshadweep\"\n    },\n    {\n    \"key\": \"MP\",\n    \"name\": \"Madhya Pradesh\"\n    },\n    {\n    \"key\": \"MH\",\n    \"name\": \"Maharashtra\"\n    },\n    {\n    \"key\": \"MN\",\n    \"name\": \"Manipur\"\n    },\n    {\n    \"key\": \"ML\",\n    \"name\": \"Meghalaya\"\n    },\n    {\n    \"key\": \"MZ\",\n    \"name\": \"Mizoram\"\n    },\n    {\n    \"key\": \"NL\",\n    \"name\": \"Nagaland\"\n    },\n    {\n    \"key\": \"OR\",\n    \"name\": \"Odisha\"\n    },\n    {\n    \"key\": \"PY\",\n    \"name\": \"Puducherry\"\n    },\n    {\n    \"key\": \"PB\",\n    \"name\": \"Punjab\"\n    },\n    {\n    \"key\": \"RJ\",\n    \"name\": \"Rajasthan\"\n    },\n    {\n    \"key\": \"SK\",\n    \"name\": \"Sikkim\"\n    },\n    {\n    \"key\": \"TN\",\n    \"name\": \"Tamil Nadu\"\n    },\n    {\n    \"key\": \"TS\",\n    \"name\": \"Telangana\"\n    },\n    {\n    \"key\": \"TR\",\n    \"name\": \"Tripura\"\n    },\n    {\n    \"key\": \"UP\",\n    \"name\": \"Uttar Pradesh\"\n    },\n    {\n    \"key\": \"UK\",\n    \"name\": \"Uttarakhand\"\n    },\n    {\n    \"key\": \"WB\",\n    \"name\": \"West Bengal\"\n    }\n    ]\n\n export default states;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport data from './data/states';\n\nReactDOM.render(<App \n    alignIcon=\"left\"\n    data={data}\n    searchOnKey=\"name\"\n    showIcon=\"true\"\n    placeholder=\"Search by employee\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}