{"version":3,"sources":["components/Cockpit/Cockpit.css","containers/App.css","components/SearchedResults/Searchedresult/SearchedResult.css","components/SearchedResults/Searchedresult/SearchedResult.js","components/SearchedResults/SearchedResults.js","components/Cockpit/Cockpit.js","containers/App.js","serviceWorker.js","data/states.js","index.js"],"names":["module","exports","Cockpit","focus","blur","left","hideIcon","App","SearchedResult","searchedResult","props","react_default","a","createElement","className","classes","data","searchedResults","map","state","Searchedresult_SearchedResult","searchOnKey","key","cockpit","inputClass","ulClass","alignIcon","toLowerCase","showIcon","assignedClass","onChange","search","placeholder","onFocus","console","log","SearchedResults","dataList","_this","filteredKeyResults","filterdata","Object","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","setState","searchHandler","event","inputValue","target","toUpperCase","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","includes","this","Cockpit_Cockpit","Component","defaultProps","Boolean","window","location","hostname","match","states","name","place","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62de4473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cockpit\":\"Cockpit__Cockpit__iuz7I\",\"focus\":\"Cockpit__focus__2dXJu\",\"blur\":\"Cockpit__blur__1S-vO\",\"left\":\"Cockpit__left__2SVHf\",\"hideIcon\":\"Cockpit__hideIcon__2OCZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchedResult\":\"SearchedResult__SearchedResult__2d6Lh\"};","import React from 'react';\nimport classes from './SearchedResult.css';\nconst searchedResult = (props) => (<li className={classes.SearchedResult}>{props.data}</li>);\n\nexport default searchedResult;","import React from 'react';\nimport SearchedResult from '../SearchedResults/Searchedresult/SearchedResult';\n\nconst searchedResults = (props) => props.searchedResults.map(state => {\n        return <SearchedResult data={state[props.searchOnKey]} key={state.key} />\n})\n\nexport default searchedResults;","import React from 'react';\nimport SearchedResults from '../SearchedResults/SearchedResults';\nimport classes from './Cockpit.css'\n\n// cockpit.defaultProps = {\n//     border: '1px solid #ddd' \n// }\nconst cockpit = (props) => {\n    let inputClass = \"\";\n    let ulClass = \"\";\n\n    if (props.alignIcon.toLowerCase() === \"left\") {\n        inputClass += \" \" + classes.left;\n        ulClass += classes.left;\n    }\n\n    if (props.showIcon.toLowerCase() === 'false') {\n        inputClass += \" \" + classes.hideIcon;\n        ulClass += classes.hideIcon;\n    }\n\n    var assignedClass = '';\nconst focusHandler = () => {\n    console.log(\"dd\");\n    assignedClass = classes.focus;\n}\n\n    // const blurHandler = () => {\n    //     assignedClass = \"\";\n    //     assignedClass = classes.blur;\n    // }\n \n\n\n    // let style = {\n    //     border: '1px solid #ddd'\n    // }\n\n    return (\n        <div className={classes.Cockpit}>\n            <div className={assignedClass} >\n                <input\n                    onChange={props.search}\n                    className={inputClass}\n                    placeholder={props.placeholder}\n                    onFocus={focusHandler}\n                />\n                <ul className={ulClass}>\n                    <SearchedResults searchedResults={props.searchedResult} searchOnKey={props.searchOnKey} />\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default cockpit;","import React, { Component} from 'react';\nimport classes from './App.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nclass App extends Component {\n\n  static defaultProps = {\n    alignIcon: 'right',\n    placeholder: 'Search...',\n    showIcon: 'true'\n  }\n\n  state = {\n    dataList: this.props.data,\n    filteredKeyResults: [],\n    searchedResult: [],\n    alignIcon: this.props.alignIcon,\n    searchOnKey: this.props.searchOnKey,\n    placeholder: this.props.placeholder,\n    showIcon: this.props.showIcon\n  }\n\n  filterdata = () => {\n    const filteredKeyResults = [];\n    const searchOnKey = this.state.searchOnKey;\n    const dataList = [...this.state.dataList];\n    for(let data of dataList) {\n      if(data[searchOnKey]) filteredKeyResults.push(data);\n    }\n    this.setState({filteredKeyResults: filteredKeyResults})\n  }\n\n  searchHandler = event => {\n    const searchOnKey = this.state.searchOnKey;\n    const inputValue = event.target.value.toUpperCase();\n    const filteredKeyResults = [...this.state.filteredKeyResults];\n    var searchedResult = [];\n\n    for(let data of filteredKeyResults) {\n      if(data[searchOnKey].toUpperCase().includes(inputValue)) searchedResult.push(data);\n    }\n\n    if(!inputValue) searchedResult = [];\n    this.setState({\n      searchedResult: searchedResult\n    });\n  }\n\n  componentDidMount() {\n    this.filterdata();\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <Cockpit \n        placeholder={this.state.placeholder}\n        searchedResult={this.state.searchedResult}\n        search={this.searchHandler}\n        alignIcon={this.state.alignIcon}\n        showIcon={this.state.showIcon}\n        searchOnKey={this.state.searchOnKey} />\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var states = [\n    {\n    \"key\": \"AN\",\n    \"name\": \"Andaman and Nicobar Islands\"\n    },\n    {\n    \"key\": \"AP\",\n    \"name\": \"Andhra Pradesh\"\n    },\n    {\n    \"key\": \"AR\",\n    \"name\": \"Arunachal Pradesh\",\n    \"place\": \"mira road\"\n    },\n    {\n    \"key\": \"AS\",\n    \"name\": \"Assam\"\n    },\n    {\n    \"key\": \"BR\",\n    \"name\": \"Bihar\"\n    },\n    {\n    \"key\": \"CG\",\n    \"name\": \"Chandigarh\"\n    },\n    {\n    \"key\": \"CH\",\n    \"name\": \"Chhattisgarh\"\n    },\n    {\n    \"key\": \"DH\",\n    \"name\": \"Dadra and Nagar Haveli\"\n    },\n    {\n    \"key\": \"DD\",\n    \"name\": \"Daman and Diu\"\n    },\n    {\n    \"key\": \"DL\",\n    \"name\": \"Delhi\"\n    },\n    {\n    \"key\": \"GA\",\n    \"name\": \"Goa\"\n    },\n    {\n    \"key\": \"GJ\",\n    \"name\": \"Gujarat\"\n    },\n    {\n    \"key\": \"HR\",\n    \"name\": \"Haryana\"\n    },\n    {\n    \"key\": \"HP\",\n    \"name\": \"Himachal Pradesh\"\n    },\n    {\n    \"key\": \"JK\",\n    \"name\": \"Jammu and Kashmir\"\n    },\n    {\n    \"key\": \"JH\",\n    \"name\": \"Jharkhand\"\n    },\n    {\n    \"key\": \"KA\",\n    \"name\": \"Karnataka\"\n    },\n    {\n    \"key\": \"KL\",\n    \"name\": \"Kerala\"\n    },\n    {\n    \"key\": \"LD\",\n    \"name\": \"Lakshadweep\"\n    },\n    {\n    \"key\": \"MP\",\n    \"name\": \"Madhya Pradesh\"\n    },\n    {\n    \"key\": \"MH\",\n    \"name\": \"Maharashtra\"\n    },\n    {\n    \"key\": \"MN\",\n    \"name\": \"Manipur\"\n    },\n    {\n    \"key\": \"ML\",\n    \"name\": \"Meghalaya\"\n    },\n    {\n    \"key\": \"MZ\",\n    \"name\": \"Mizoram\"\n    },\n    {\n    \"key\": \"NL\",\n    \"name\": \"Nagaland\"\n    },\n    {\n    \"key\": \"OR\",\n    \"name\": \"Odisha\"\n    },\n    {\n    \"key\": \"PY\",\n    \"name\": \"Puducherry\"\n    },\n    {\n    \"key\": \"PB\",\n    \"name\": \"Punjab\"\n    },\n    {\n    \"key\": \"RJ\",\n    \"name\": \"Rajasthan\"\n    },\n    {\n    \"key\": \"SK\",\n    \"name\": \"Sikkim\"\n    },\n    {\n    \"key\": \"TN\",\n    \"name\": \"Tamil Nadu\"\n    },\n    {\n    \"key\": \"TS\",\n    \"name\": \"Telangana\"\n    },\n    {\n    \"key\": \"TR\",\n    \"name\": \"Tripura\"\n    },\n    {\n    \"key\": \"UP\",\n    \"name\": \"Uttar Pradesh\"\n    },\n    {\n    \"key\": \"UK\",\n    \"name\": \"Uttarakhand\"\n    },\n    {\n    \"key\": \"WB\",\n    \"name\": \"West Bengal\"\n    }\n    ]\n\n export default states;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport data from './data/states';\n\nReactDOM.render(<App \n    alignIcon=\"right\"\n    data={data}\n    searchOnKey=\"name\"\n    showIcon=\"true\"\n    placeholder=\"Search by employee\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}